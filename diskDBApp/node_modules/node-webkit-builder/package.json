{
  "name": "node-webkit-builder",
  "version": "0.0.3",
  "description": "node-webkit-builder",
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mllrsohn/node-webkit-builder.git"
  },
  "bin": {
    "nwbuild": "./bin/nwbuild"
  },
  "author": {
    "name": "Steffen MÃ¼ller"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mllrsohn/node-webkit-builder/issues"
  },
  "homepage": "https://github.com/mllrsohn/node-webkit-builder",
  "devDependencies": {
    "tape": "^2.12.3",
    "nock": "^0.32.3"
  },
  "dependencies": {
    "request": "~2.34.0",
    "lodash": "~2.4.1",
    "bluebird": "~1.2.2",
    "temp": "~0.7.0",
    "plist": "^1.0.0",
    "nock": "^0.32.3",
    "decompress-zip": "^0.0.7",
    "simple-glob": "~0.1.0",
    "inherits": "~2.0.1",
    "fs-extra": "^0.9.1",
    "archiver": "^0.10.0",
    "tar-fs": "^0.3.2",
    "optimist": "^0.6.1",
    "update-notifier": "^0.1.8",
    "rcedit": "0.2.0"
  },
  "readme": "## NOTE: This is a preview version\n\n# node-webkit-builder [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\n\n> Let's you build your node-webkit apps for mac, win and linux via cli. It will download the prebuilt binaries for a newest version, unpacks it, creates a release folder, create the app.nw file for a specified directory and copys the app.nw file where it belongs.\n\n\n### Installation\n\n##### Local\n```shell\nnpm install node-webkit-builder --save-dev\n```\n\n##### Global\n```shell\nnpm install node-webkit-builder -g\n```\n\n##### Grunt and Gulp Plugins\nYes, there is also a [Grunt Plugin](https://github.com/mllrsohn/grunt-node-webkit-builder). For Gulp, just use the module :)\n\n\n## Usage\n\n```shell\nUsage: nwbuild [options] [path]\n\nOptions:\n  -p, --platforms      Platforms to build, comma-sperated, can be: win,osx,linux32,linux64   [default: \"osx,win\"]\n  -v, --version        The nw version, eg. 0.8.4                                             [default: \"latest\"]\n  -r, --run            Runs node-webkit for the current plattform                            [default: false]  \n  -o, --buildDir       The build folder                                                      [default: \"./build\"]\n  -f, --forceDownload  Force download of node-webkit                                         [default: false]\n  -c, --checkVersions  Disables checking versions, usefull when working offline              [default: true]\n  --quite              Disables logging                                                      [default: false]\n\n```\n#### Run node-webkit\nDuring development you can run node-webkit with `nwbuild -r path/to/your/younwapp/`\n\nOr use the module:\n\n```js\nvar NwBuilder = require('node-webkit-builder');\nvar nw = new NwBuilder({\n    files: './path/to/nwfiles/**/**', // use the glob format\n    platforms: ['win','osx']\n});\n\n// Log stuff you want\nnw.on('log',  console.log);\n\n// Build retruns a promise\nnw.build().then(function () {\n   console.log('all done!');\n}).catch(function (error) {\n    console.error(error);\n});\n\n// And supports callbacks\nnw.build(function(err) {\n    if(err) console.log(err);\n})\n\n```\n\n### Options\n\n#### options.files *Required*\nType: `String`  \nDefault value: `null`  \n\nThe path to your node webkit app. It supports [simple-glob](https://github.com/jedmao/simple-glob) so you can do stuff like `['foo/*.js', '!foo/bar.js', 'foo/bar.js']`.\n\n\n#### options.version\nType: `String`  \nDefault value: `'lastest'`  \n\nThe version of node-webkit you want to use. Per default it looks up the lastest version. [Here is a list](https://github.com/rogerwang/node-webkit/wiki/Downloads-of-old-versions) of all available releases\n\n#### options.platforms\nType: `Array`  \nDefault value: `['win' ,'osx']`\n\nThe platforms you want to build. Can be `['win','osx', 'linux32', 'linux64']`\n\n#### options.appName\nType: `String`  \nDefault value: `false`  \n\nThe Name of your node-webkit app. If this value is set to null, it will autodetect the `name` form your projects package.json. This will be used to generate a plist file for mac.\n\n#### options.appVersion\nType: `String`  \nDefault value: `false`  \n\nThe version of your node-webkit app. If this value is set to null, it will autodetect the `version` form your projects package.json. This will be used to generate a plist file for mac.\n\n#### options.buildDir\nType: `String`  \nDefault value: `./build`  \n\nThis is where the releases are saved.\n\n#### options.cacheDir\nType: `String`  \nDefault value: `./cache`  \n\nThis is where the cached node-webkit downloads are\n\n#### options.buildType\nType: `String` or `function`\nDefault value: `default`  \n\nHow you want to save your build.\n\n* `default` [appName]\n* `versioned` [appName] -v[appVersion]\n* `timestamped` [appName] - [timestamp];\n* A function with options as scope (e.g `function () {return this.appVersion;}` )\n\n#### options.forceDownload\nType: `Boolean`  \nDefault value: `false`  \n\nThis will delete everything in your `build_dir` directory, including the cached downloaded prebuilt binaries\n\n#### options.checkVersions\nType: `Boolean`  \nDefault Value: `true`  \n\nChecks for the lastest node-webkit Version. Usefull when you have a cached version and want to work offline\n\n#### options.macCredits\nType: `String`  \nDefault value: `false`  \n\nMAC ONLY: The path to your credits.html file. If your don't provide your own it will use the one provided by node-webkit\n\n#### options.macIcns\nType: `String`  \nDefault value: `false`  \n\nMAC ONLY: The path to your ICNS icon file. If your don't provide your own it will use the one provided by node-webkit\n\n#### options.macZip\nType: `Boolean`  \nDefault value: `false`  \n\nMAC ONLY: Use a `app.nw` folder instead of `ZIP` file, this significantly improves the startup speed of applications on `mac`, since no decompressing is needed. Builds on other platforms will still use `ZIP` files.\n\n#### options.macPlist\nType: `String`  \nDefault value: `false`  \n\nMAC ONLY: if you supply a string to a Plist file it will use it. Otherwise it will generate something usefull from your package.json\n\n#### options.winIco\nType: `String`  \nDefault value: `null`  \n\nWINDOWS ONLY: The path to your ICO icon file. If your don't provide your own it will use the one provided by node-webkit\n\n\n## To Do:\n- Test it on Linux and Windows\n\n## Release History\n- 2014-04-20    Added run option, bug fixes\n- 2014-04-13    Preview Release\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/node-webkit-builder\n[npm-image]: https://badge.fury.io/js/node-webkit-builder.png\n\n[travis-url]: http://travis-ci.org/mllrsohn/node-webkit-builder\n[travis-image]: https://secure.travis-ci.org/mllrsohn/node-webkit-builder.png?branch=master\n\n[depstat-url]: https://david-dm.org/mllrsohn/node-webkit-builder\n[depstat-image]: https://david-dm.org/mllrsohn/node-webkit-builder.png\n",
  "readmeFilename": "README.md",
  "_id": "node-webkit-builder@0.0.3",
  "_from": "node-webkit-builder@"
}
